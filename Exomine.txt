title Exomine
participant DOM
participant Main.js
participant Govenors.js
participant Facilities.js
participant Colonies.js
participant Minerals.js
participant Carts.js
participant TransientState.js
participant database.json

Main.js->Govenors.js: Requests html data 
Govenors.js->database.json: requests govenors array data
database.json-->Govenors.js:returns govenors array data
Main.js<--Govenors.js:Returns html data


Main.js->Facilities.js: Requests html data 
Facilities.js->database.json: requests facilities array data
database.json-->Facilities.js:returns facilities array data
Main.js<--Facilities.js:Returns html data

Main.js->Colonies.js: Requests html data 
Colonies.js->database.json: requests colonies array data
database.json-->Colonies.js:returns colonies array data
Main.js<--Colonies.js:Returns html data

Main.js->Minerals.js: Requests html data 
Minerals.js->database.json: requests minerals array data
database.json-->Minerals.js:returns minerals array data
Main.js<--Minerals.js:Returns html data

Main.js->Carts.js: Requests html data 
Carts.js->Main.js: return html button string
//This is Where the User Events start
Govenors.js<--DOM: User selects govenor
Govenors.js->TransientState.js:update Govenor selection
TransientState.js->Main.js: recall render
Main.js->>DOM: Re-Render Page
Facilities.js<--DOM: User selects facilities
Facilities.js->TransientState.js: update facilities selection
TransientState.js->Main.js:recall render
Main.js->>DOM: Re-Render Page
//This is where the radio functionality starts
DOM->Minerals.js:Use selects Minerals via radio buttons\n
Minerals.js->TransientState.js: update selected mineral
TransientState.js->Main.js: recall render
DOM<<-Main.js:re-render page
DOM->Carts.js:purchase button clicked
Carts.js->TransientState.js: Prepare purchase for POST/PUT
TransientState.js->database.json: POST
database.json-->TransientState.js: Resolve POST
TransientState.js->Main.js: Recalls render
Main.js->>DOM: Re-Render Page

